.. _naoqi-trackers:

NAOqi Trackers
==============

Overview | :ref:`alredballtracker-api` | :ref:`alfacetracker-api` | :ref:`trackers-sample`

----------------

.. toctree::
   :hidden:
   :maxdepth: 1

   alredballtracker-api
   alfacetracker-api
   trackers-sample


What it does
------------

The Tracker modules allow you to make NAO track targets (a red ball or a face).

The main goal of these modules is to establish a bridge between target detection
and motion in order to make NAO keep in view the target in the middle of the camera.

How it works
------------

Step by step
++++++++++++

**A** - Starts the tracker by Subscribing to Event TargetDetected from ``ALTargetDetection`` module
(:cpp:func:`ALRedBallTrackerProxy::startTracker` or :cpp:func:`ALFaceTrackerProxy::startTracker`).

**B** - Waits Event TargetDetected from ``ALTargetDetection`` module.

**C** - When target is detected, sends information to motion of the position of
the new target (:cpp:func:`ALMotionProxy::updateTrackerTarget`).

**D** - Stops the tracker by Unsubscribing to Event TargetDetected from
``ALTargetDetection`` module (:cpp:func:`ALRedBallTrackerProxy::stopTracker`,
:cpp:func:`ALFaceTrackerProxy::stopTracker`).

Position identification
+++++++++++++++++++++++

.. image:: /medias/nao/tracker_red_ball.png

- The Tracker modules (``ALRedBallTracker``, ``ALFaceTracker``) identify the position
  of target ("Red ball" or "Face") seen by NAO.

- It can give the position of the target in **SPACE_TORSO**
  (see :ref:`motion-effectors-space` about the different spaces).

- Function getPosition returns the [x, y, z] position of the target
  (``ALRedBallTracker::``:cpp:func:`ALRedBallTrackerProxy::getPosition` or
  ``ALFaceTracker::``:cpp:func:`ALFaceTrackerProxy::getPosition`).


Performance and Limitations
----------------------------

**Limitations**

You can use only top camera.

This is done assuming an average target size, so it might not be very accurate.

Getting started
---------------

Prerequisite
++++++++++++

* These modules need respectively :ref:`alredballdetection` and
  :ref:`ALFaceDetection <alfacedetection>` module to run.
  So be sure it is loaded on your robot.

* Stiffness of Head must be set to 1.0 to move.
  Use motion api :cpp:func:`ALMotionProxy::stiffnessInterpolation`.

Settings
+++++++++

Choose the kind of motion tracking using the following api:
(:cpp:func:`ALRedBallTrackerProxy::setWholeBodyOn` or
:cpp:func:`ALFaceTrackerProxy::setWholeBodyOn`).

- **head tracking**: the two head's joint are controlled to reach the target.
  The tracking area is limited by the limits of NAO joints.
- **whole body tracking**: NAO keeps balance autonomously and adapts his posture
  to track the target.


Main methods
+++++++++++++

Main methods to use the tracker are startTracker() / stopTracker().

Use Cases
---------

Here are some possible applications (from the simplest to the more ambitious ones) that can be built from NAO's ability to track a target.

**Case 1: Tracking the red ball using the head:** :ref:`trackers-sample-redball`

**Case 2: Tracking the red ball using the whole body motion:** :ref:`choregraphe-tuto-red-ball-whole-body-tracker`

**Case 3: Walk toward a person:** :ref:`choregraphe-tuto-face-walk-tracker`

