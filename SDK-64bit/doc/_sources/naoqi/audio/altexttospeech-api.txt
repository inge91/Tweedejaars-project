.. _altexttospeech-api:

ALTextToSpeech API
==================

:ref:`naoqi-audio` || :ref:`Overview <altexttospeech>` | API | :ref:`Tutorial <altexttospeech-tuto>`

-----------------

.. seealso::

   - :ref:`Loudspeakers Hardware <hardware-audio-out>`


Namespace : **AL**

.. code-block:: cpp

  #include <alproxies/altexttospeechproxy.h>


Method list
-----------

As any module, this module inherits methods from :ref:`almodule-api`.
It also has the following specific methods:


.. cpp:class:: ALTextToSpeechProxy

* :cpp:func:`ALTextToSpeechProxy::disableNotifications`
* :cpp:func:`ALTextToSpeechProxy::enableNotifications`
* :cpp:func:`ALTextToSpeechProxy::getAvailableLanguages`
* :cpp:func:`ALTextToSpeechProxy::getAvailableVoices`
* :cpp:func:`ALTextToSpeechProxy::getLanguage`
* :cpp:func:`ALTextToSpeechProxy::getParameter`
* :cpp:func:`ALTextToSpeechProxy::getVoice`
* :cpp:func:`ALTextToSpeechProxy::getVolume`
* :cpp:func:`ALTextToSpeechProxy::loadVoicePreference`
* :cpp:func:`ALTextToSpeechProxy::say`
* :cpp:func:`ALTextToSpeechProxy::sayToFile`
* :cpp:func:`ALTextToSpeechProxy::sayToFileAndPlay`
* :cpp:func:`ALTextToSpeechProxy::setLanguage`
* :cpp:func:`ALTextToSpeechProxy::setParameter`
* :cpp:func:`ALTextToSpeechProxy::setVoice`
* :cpp:func:`ALTextToSpeechProxy::setVolume`
* :cpp:func:`ALTextToSpeechProxy::stopAll`



Event list
----------

* :naoqi:event:`CurrentBookMark`
* :naoqi:event:`CurrentSentence`
* :naoqi:event:`CurrentWord`
* :naoqi:event:`PositionOfCurrentWord`
* :naoqi:event:`TextStarted`
* :naoqi:event:`TextDone`

Methods
-------


.. cpp:function:: void ALTextToSpeechProxy::disableNotifications()

  Disables notifications publishing in *ALMemory* during the synthesis (disabled by default).
  Please refer to :cpp:func:`ALTextToSpeechProxy::enableNotifications` for further informations.


.. cpp:function:: void ALTextToSpeechProxy::enableNotifications()

  Enables notifications publishing in *ALMemory* during the synthesis (disabled by default).
  Once enabled, the following notifications are generated:

  - *ALTextToSpeech/CurrentBookMark*: indicates the occurrence of the bookmarks that are placed (using "\mrk=number" number being an integer [0 - 65535]) in the string that needs to be synthesized, see :download:`Acapela Mobility Text TAGS </medias/dev/modules/audio/audio_system_acapelamobilitytexttags.pdf>` for further information.
  - *ALTextToSpeech/CurrentSentence*: indicates the sentence that is currently synthesized.
  - *ALTextToSpeech/CurrentWord*: indicates the word that is currently synthesized.
  - *ALTextToSpeech/PositionOfCurrentWord*: indicates the word that is currently synthesized.
  - *ALTextToSpeech/TextStarted*: indicates if a sentence is currently synthesized.
  - *ALTextToSpeech/TextDone*: indicates when the current sentence synthesis is done.



.. cpp:function:: std::vector<std::string> ALTextToSpeechProxy::getAvailableLanguages()

  Returns the list of the languages currently installed on the system. Each language is given in English.

  :return: Languages installed

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_getavailablelanguages.py
    :language: py


.. cpp:function:: std::vector<std::string> ALTextToSpeechProxy::getAvailableVoices()

  Returns the list of the voices currently installed on the system. Each voice is given in English.

  :return: Voices Installed


.. cpp:function:: std::string ALTextToSpeechProxy::getLanguage()

  Returns the language (English name) currently used by the text to speech engine.

  :return: Current language used by the text to speech engine



.. cpp:function:: float ALTextToSpeechProxy::getParameter(const std::string& parameter)

  Returns the value of one of the text to speech engine parameters.
  The available parameters are: "pitchShift", "doubleVoice","doubleVoiceLevel" and "doubleVoiceTimeShift".
  Please refers to :cpp:func:`ALTextToSpeechProxy::setParameter` for details about this parameters.

  :param parameter: Name of the parameter
  :return: Value of the specified parameter


.. cpp:function:: std::string ALTextToSpeechProxy::getVoice()

  Returns the voice currently used by the text to speech engine.

  :return: Name of the current voice


.. cpp:function:: float ALTextToSpeechProxy::getVolume()

  Gets the current gain applied to the signal synthesized by the text to speech engine. The default value is 1.0.

  :return: Volume [0 - 1]



.. cpp:function:: void ALTextToSpeechProxy::loadVoicePreference(const std::string& preferencesFileSuffix)

  Loads a voice and the related set of voice parameters defined in a XML file contained in the preferences folder.
  The name of the XML file must be of the form `ALTextToSpeech_Voice_preferencesFileSuffix`.
  The official voice of NAO in each language is defined in this way. Please refers to :ref:`Tutorial <altexttospeech-tuto>` for further details.

  :param preferencesFileSuffix: Name of the voice preference file

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_loadvoicepreference.py
    :language: py


.. cpp:function:: void ALTextToSpeechProxy::say(const std::string& stringToSay)

  Provides the specified string of character to the text to speech engine,
  launch the synthesis process and send the result to NAO's speakers.
  String encoding must be UTF-8.

  :param stringToSay: Text to say, encoded in UTF-8.

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_say.py
    :language: py


.. cpp:function:: void ALTextToSpeechProxy::sayToFile( const std::string& stringToSay, const std::string& fileName)

  Works similarly to :cpp:func:`ALTextToSpeechProxy::say` but the synthesized signal is recorded into the specified file instead of being sent to NAO's loudspeakers.
  The signal is encoded with a sample rate of 22050Hz (European languages) and 16000Hz (Asian languages), format S16_LE, 2 channels.

  :param stringToSay: Text to be synthesized, encoded in UTF-8
  :param fileName: RAW file where the synthesized signal should be recorded

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_saytofile.py
    :language: py


.. cpp:function:: int ALTextToSpeechProxy::sayToFileAndPlay(const std::string& stringToSay)

  Works similarly to :cpp:func:`ALTextToSpeechProxy::sayToFile` but sent also the synthesized signal to NAO's loudspeakers.

  :param stringToSay: Text to say, encoded in UTF-8.
  :return: Id of the task. Can be used to interrupt it.


.. cpp:function:: void ALTextToSpeechProxy::setLanguage(const std::string& language)

  Sets the language (English name) currently used by the text to speech system.
  Each NAOqi restart will however reset that setting to the default language that
  can be set on NAO's web page.

  :param language: Language (English name)


.. cpp:function:: void ALTextToSpeechProxy::setParameter( const std::string& parameter, const float& value)

  Sets parameters of the text to speech engine.
  The available parameters are:

  * pitchShift: applies a pitch shift to the voice. The value indicates the ratio between the new fundamental frequencies and the original one (examples: 2.0: an octave above, 1.5: a quint above). Acceptable range is [1.0 - 4]. 0 disables the effect.
  * doubleVoice: adds a second voice to the first one. The value indicates the ratio between the second voice fundamental frequency and the first one. Acceptable range is [1.0 - 4]. 0 disables the effect.
  * doubleVoiceLevel: sets the gain of the additional voice compared to the original one. Acceptable range is [0 - 4]. 0 disables the effect.
  * doubleVoiceTimeShift: sets the delay (seconds) between the doubled voice and the original one. Acceptable range is [0 - 0.5].

  :param parameter: Name of the parameter
  :param value: Value of the parameter

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_setparameter.py
    :language: py


.. cpp:function:: void ALTextToSpeechProxy::setVoice(const std::string& voiceID)

  Changes the voice used by the text-to-speech engine.
  The voice identifier must belong to the installed voices, that can be listed using the :cpp:func:`ALTextToSpeechProxy::getAvailableVoices` method.

  :param voiceID: Name of the voice

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_setvoice.py
    :language: py


.. cpp:function:: void ALTextToSpeechProxy::setVolume(const float& volume)

  Sets the current gain applied to the signal synthesized by the text to speech engine. The default value is 1.0.

  :param volume: Gain

  .. literalinclude:: /samples/python/altexttospeech/altexttospeech_setvolume.py
    :language: py


.. cpp:function:: void ALTextToSpeechProxy::stopAll()

  This method stops the current and all the pending tasks immediately.


- *ALTextToSpeech/CurrentBookMark*: indicates the occurrence of the bookmarks that are placed (using "\mrk=number" number being an integer [0 - 65535]) in the string that needs to be synthesized, see :download:`Acapela Mobility Text TAGS </medias/dev/modules/audio/audio_system_acapelamobilitytexttags.pdf>` for further information.
- *ALTextToSpeech/CurrentSentence*: indicates the sentence that is currently synthesized.
- *ALTextToSpeech/CurrentWord*: indicates the word that is currently synthesized.
- *ALTextToSpeech/PositionOfCurrentWord*: indicates the word that is currently synthesized.
- *ALTextToSpeech/TextDone*: indicates when the current sentence synthesis is done.
- *ALTextToSpeech/TextStarted*: indicates if a sentence is currently synthesized.



Events
------

.. naoqi:event:: CurrentBookMark(int value)

  Indicates the occurrence of the bookmarks that are placed (using "\mrk=number" number being an integer [0 - 65535]) in the string that needs to be synthesized, see :download:`Acapela Mobility Text TAGS </medias/dev/modules/audio/audio_system_acapelamobilitytexttags.pdf>` for further information.

  :param value: Current bookmark.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.


.. naoqi:event:: CurrentSentence(std::string value)

  Indicates the sentence that is currently synthesized.

  :param value: Current sentence.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.


.. naoqi:event:: CurrentWord(std::string value)

  Indicates the word that is currently synthesized.

  :param value: Current word.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.


.. naoqi:event:: PositionOfCurrentWord(int value)

  Indicates the word that is currently synthesized by its index in the current sentence.
  Index 0 refers to the first word of the sentence.

  :param value: Current word position.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.


.. naoqi:event:: TextStarted(bool value)

  Raised when the current sentence synthesis starts.

  :param value: True if the current speaking task is in progress.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.


.. naoqi:event:: TextDone(bool value)

  Raised when the current sentence synthesis is done.

  :param value: True if the current speaking task is done.

  .. note:: This event should be prefixed by "ALTextToSpeech/" when subscribing to it.
