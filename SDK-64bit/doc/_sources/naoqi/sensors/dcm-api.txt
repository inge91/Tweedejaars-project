.. _dcm-api:

DCM API
=======

:ref:`Overview <dcm>` | API | :ref:`Tutorial <dcm-tuto>`

------------

Namespace : **AL**

.. code-block:: cpp

  #include <alproxies/dcmproxy.h>

Method list
-----------

As any module, this module inherits methods from :ref:`almodule-api`.
It also has the following specific methods:

.. cpp:class:: DCMProxy

* :cpp:func:`DCMProxy::calibration`
* :cpp:func:`DCMProxy::createAlias`
* :cpp:func:`DCMProxy::getPrefix`
* :cpp:func:`DCMProxy::getTime`
* :cpp:func:`DCMProxy::preferences`
* :cpp:func:`DCMProxy::set`
* :cpp:func:`DCMProxy::setAlias`
* :cpp:func:`DCMProxy::special`


Methods
-------

.. cpp:function:: void DCMProxy::calibration(const AL::ALValue& calibrationInput)

  Calibration of a joint

  :param calibrationInput: A complex ALValue.

.. cpp:function:: AL::ALValue DCMProxy::createAlias(const AL::ALValue& alias)

  Create or change an alias (list of actuators)

  :param alias: Alias name and description

  :return: Same as pParams, but with the name removed if the actuator is not found

.. cpp:function:: AL::ALValue DCMProxy::getPrefix()

  Return the STM base name

  :return: the STM base name for all device/sensors (1st string in the array) and all devices (2nd string in the array)

.. cpp:function:: int DCMProxy::getTime(const int& offset)

  Return the DCM time

  :param offset: optional time in ms (signed) to add/remove

  :return: An integer (could be signed) with the DCM time

.. cpp:function:: int DCMProxy::preferences( const std::string& action, const std::string& target, const std::string& keyName, const AL::ALValue& keyValue )

  Save updated value from DCM in XML pref file

  :param action: string : 'Save' 'Load' 'Add'

  :param target: string : 'Chest' 'Head' 'Main' 'All'

  :param keyName: The name of the key if action = 'Add'.

  :param keyValue: The ALVAlue of the key to add

  :return: Nothing

.. cpp:function:: void DCMProxy::set(const AL::ALValue& commands)

  Call this function to send a timed-command list to an actuator

  :param commands: AL::ALValue with all data

.. cpp:function:: void DCMProxy::setAlias(const AL::ALValue& commands)

  Call this function to send timed-command list to an alias (list of actuators)

  :param commands: AL::ALValue with all data

.. cpp:function:: void DCMProxy::special(const std::string& result)

  Special DCM commands

  :param result: one string and could be Reset, Version, Chain, Diagnostic, Config

