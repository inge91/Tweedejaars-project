.. _almotion-api:

ALMotion API
============

:ref:`Overview <almotion>` | API | :ref:`advanced`

------------


ALMotion provides methods that help make NAO move.
It contains commands allowing you to manipulate joint stiffness, joint angles,
and a higher level API allowing you to control the walk.


Method Group list
-----------------

As any module, this module inherits methods from :ref:`almodule-api`.
It also has the following specific methods:

* :ref:`control-stiffness-api`

  * :cpp:func:`ALMotionProxy::stiffnessInterpolation`
  * :cpp:func:`ALMotionProxy::setStiffnesses`
  * :cpp:func:`ALMotionProxy::getStiffnesses`

* :ref:`control-joint-api`

  * :cpp:func:`ALMotionProxy::angleInterpolation`
  * :cpp:func:`ALMotionProxy::angleInterpolationWithSpeed`
  * :cpp:func:`ALMotionProxy::angleInterpolationBezier`
  * :cpp:func:`ALMotionProxy::setAngles`
  * :cpp:func:`ALMotionProxy::changeAngles`
  * :cpp:func:`ALMotionProxy::getAngles`
  * :cpp:func:`ALMotionProxy::closeHand`
  * :cpp:func:`ALMotionProxy::openHand`

* :ref:`control-walk-api`

  * :cpp:func:`ALMotionProxy::setWalkTargetVelocity`
  * :cpp:func:`ALMotionProxy::walkTo`
  * :cpp:func:`ALMotionProxy::stepTo`
  * :cpp:func:`ALMotionProxy::setFootSteps`
  * :cpp:func:`ALMotionProxy::setFootStepsWithSpeed`
  * :cpp:func:`ALMotionProxy::getFootSteps`
  * :cpp:func:`ALMotionProxy::walkInit`
  * :cpp:func:`ALMotionProxy::waitUntilWalkIsFinished`
  * :cpp:func:`ALMotionProxy::walkIsActive`
  * :cpp:func:`ALMotionProxy::stopWalk`
  * :cpp:func:`ALMotionProxy::getFootGaitConfig`
  * :cpp:func:`ALMotionProxy::getRobotPosition`
  * :cpp:func:`ALMotionProxy::getNextRobotPosition`
  * :cpp:func:`ALMotionProxy::getRobotVelocity`
  * :cpp:func:`ALMotionProxy::getWalkArmsEnable`
  * :cpp:func:`ALMotionProxy::setWalkArmsEnable`
  * :cpp:func:`ALMotionProxy::getWalkArmsEnabled`
  * :cpp:func:`ALMotionProxy::setWalkArmsEnabled`

* :ref:`control-cartesian-api`

  * :cpp:func:`ALMotionProxy::positionInterpolation`
  * :cpp:func:`ALMotionProxy::positionInterpolations`
  * :cpp:func:`ALMotionProxy::setPosition`
  * :cpp:func:`ALMotionProxy::changePosition`
  * :cpp:func:`ALMotionProxy::getPosition`
  * :cpp:func:`ALMotionProxy::transformInterpolation`
  * :cpp:func:`ALMotionProxy::transformInterpolations`
  * :cpp:func:`ALMotionProxy::setTransform`
  * :cpp:func:`ALMotionProxy::changeTransform`
  * :cpp:func:`ALMotionProxy::getTransform`

* :ref:`control-wholebody-api`

  * :cpp:func:`ALMotionProxy::wbEnable`
  * :cpp:func:`ALMotionProxy::wbFootState`
  * :cpp:func:`ALMotionProxy::wbEnableBalanceConstraint`
  * :cpp:func:`ALMotionProxy::wbGoToBalance`
  * :cpp:func:`ALMotionProxy::wbEnableEffectorControl`
  * :cpp:func:`ALMotionProxy::wbSetEffectorControl`

* :ref:`reflexes-collision-avoidance-api`

  * :cpp:func:`ALMotionProxy::setCollisionProtectionEnabled`
  * :cpp:func:`ALMotionProxy::getCollisionProtectionEnabled`
  * :cpp:func:`ALMotionProxy::isCollision`

* :ref:`reflexes-fall-manager-api`

  * :cpp:func:`ALMotionProxy::setFallManagerEnabled`
  * :cpp:func:`ALMotionProxy::getFallManagerEnabled`

* :ref:`reflexes-smart-stiffness-api`

  * :cpp:func:`ALMotionProxy::setSmartStiffnessEnabled`
  * :cpp:func:`ALMotionProxy::getSmartStiffnessEnabled`

* :ref:`tools-general-api`

  * :cpp:func:`ALMotionProxy::getJointNames`
  * :cpp:func:`ALMotionProxy::getSensorNames`
  * :cpp:func:`ALMotionProxy::getLimits`
  * :cpp:func:`ALMotionProxy::getRobotConfig`
  * :cpp:func:`ALMotionProxy::getSummary`
  * :cpp:func:`ALMotionProxy::getMass`
  * :cpp:func:`ALMotionProxy::getCOM`
  * :cpp:func:`ALMotionProxy::setMotionConfig`
  * :cpp:func:`ALMotionProxy::updateTrackerTarget`

* :ref:`tools-motion-task-api`

  * :cpp:func:`ALMotionProxy::getTaskList`
  * :cpp:func:`ALMotionProxy::areResourcesAvailable`
  * :cpp:func:`ALMotionProxy::killTask`
  * :cpp:func:`ALMotionProxy::killTasksUsingResources`
  * :cpp:func:`ALMotionProxy::killWalk`
  * :cpp:func:`ALMotionProxy::killAll`

