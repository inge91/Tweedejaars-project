.. _cpp-install-guide:

C++ SDK Installation
====================


:ref:`Overview <sdk-index>` | **C++** | :ref:`Python <python-introduction>` |
:ref:`.Net <naoqi-dot-net>` | :ref:`Java <java>` | :ref:`Matlab <matlab>` | :ref:`Urbi <urbi>`

:ref:`cpp-introduction` | *C++ SDK Installation* | :ref:`cpp-tutos-examples` |
:ref:`cpp-examples` | :ref:`tips_and_tricks`



.. _compatible-platforms:

Supported Operating Systems
-----------------------------

=========  =============================================   ===============================  =========================================================
OS          Version                                           Architecture                   Allows you to compile code running on ...               
=========  =============================================   ===============================  =========================================================
Linux       Ubuntu 10.04 LTS (Lucid) to 11.04 (Natty)         * 32-bit (fully tested)        * the robot and                                         
                                                                                             * your computer.                                        
            .. note::                                         * 64-bit (under validation)                                                            
                                                                                                                                             
                Ubuntu Karmic is no longer                                                                                                   
                officially supported.                                                                                                                
                                                                                                                                                     
Windows     Microsoft Windows XP Service Pack 3,              * 32-bits                      * your computer only.                                   
                                                                                                                                                     
            Microsoft Windows 7                                                                                                                      
                                                                                                                                                     
Mac         Mac OS X 10.6.4 Snow Leopard,                     * 32-bit (fully tested)        * your computer only.                                   
                                                                                                                                                     
            Mac OS X 10.7.1 Lion                              * 64-bit (under validation)                                                            
=========  =============================================   ===============================  =========================================================

Think about a virtual machine if you need to compile code running on the robot (under linux)
and in the same time need to use Windows or Mac OS (to use **NAOsim** for example).



Requirements
------------

.. _required-compiler:

Compiler and IDE
+++++++++++++++++

==========  ===================================================================================
OS           Compiler and IDE
==========  ===================================================================================
Linux        **GCC** version 4.4 or higher and

             a recent version of **QtCreator**.

Windows      **Visual Studio 2008** or **Visual Studio 2010**.

Mac          **XCode**, use the version corresponding to your Mac OS X (Snow Leopard or Lion),
             and

             a recent version of **QtCreator**.
==========  ===================================================================================

On **Mac** and **Linux** you can also use **Eclipse** if you are used to it.

.. _required-buidsys:

Cross-platform build system
++++++++++++++++++++++++++++

Additionally to the **C++ SDK**, you will have to install **qiBuild**, a tool
designed to generate cross-platform projects using **CMake**.
CMake generates makefiles and workspaces for any operating system, making the project
able to be compiled simply on Windows, Mac, Linux and OpenNAO.

The table below lists the prerequisites to **qiBuild** installation.

====================================  ==============================================================================
Requirement                           Comments
====================================  ==============================================================================
**CMake version 2.8.3** or higher     On **Linux**:

                                      Use the cmake package provided by your distribution.

                                      On **Windows** and **Mac**:

                                      * Use the installer from **CMake** official website:
                                        http://www.cmake.org/cmake/resources/software.html

                                      * When prompted, choose to add CMake to your ``PATH``.

**Python 2.7**                        On **Windows**:

                                      To use scripts written in Python, you have to put in your ``PATH``:
                                      ``C:\Python27`` and ``c:\Python27\Scripts``
====================================  ==============================================================================

Installation
------------

=====  ==================================================================================================
Step       Action
=====  ==================================================================================================
1.      *Checking SDK prerequisites*

        Make sure you have installed one of the recommended compilers and IDE.

        For further details, see :ref:`required-compiler`.

2.      *Retrieving C++ SDK*

        Retrieve the **C++ SDK** archive:

        * naoqi-sdk-1.12.x-``[OS]``.tar.gz or
        * naoqi-sdk-1.12.x-win32-``[visualStudioversion]``.zip

        | You can find it on the DVD in **Software** > **SDK** > **NAOqi SDK** > **C++**
        | or download the latest release from the Aldebaran Robotics' User or Developer site.
        |

        Be careful to select the archive corresponding to your Operating System (Windows, Mac or Linux).

        For Windows, choose win32-``vs2008`` if you are using Visual Studio 2008,
        or win32-``vs2010`` if you are using Visual Studio 2010.

3.      Extract it on your machine.

        For now, we'll assume it's extracted in ``/path/to/naoqi-sdk``.

        For further information, see :ref:`cpp-package-content`.

4.      *Checking qiBuild prerequisites*

        Make sure you have installed **CMake** and **Python**.

        For further details, see :ref:`required-buidsys`.

5.      *Retrieving qiBuild*

        Retrieve and extract the **qiBuild** archive: ``qibuild-x.zip``

        | You can find it on the DVD in **Software** > **SDK** > **NAOqi SDK** > **C++**
        | or download the latest release from the Aldebaran Robotics' User or Developer site.
        |

        If you are used to **Git**, you can also clone the sources from github:
        https://github.com/aldebaran/qibuild.

6.      *Installing qiBuild*

        On **Linux, Mac**:

        * Run::

             ./install-qibuild.sh

        * Make sure ~/.local/bin is in your PATH.

        On **Windows**:

        * Run install-qibuild.bat::

             c:\path\to\qibuild> install-qibuild.bat

7.      *Configuring qiBuild*

        Run:

        .. code-block:: console

           $ qibuild config --wizard

        You will be prompted to specify:

        * CMake path (if not automatically found),
        * CMake Generator and
        * the IDE you will use.

        It is advised to use 'Unix Makefiles' on Linux and Mac, and 'Visual Studio' on Windows.

        Note that you can still re-run the config wizard anytime you want.

        Result:
        
        * A file is generated: ``~/.config/qi/qibuild.xml`` or ``C:\Users\[myaccount]\.config\qi\qibuild.xml``.
        * It is shared by all the worktrees you will create.
=====  ==================================================================================================



Next step
----------

* To quickly test a "Hello World", see :ref:`cpp-tutos-using-qibuild`.


.. _cpp-package-content:

Understanding the package content
---------------------------------

Main content of the naoqi-sdk archive.

================================  ==================================================================================
Directory                          Contains ...
================================  ==================================================================================
bin                                Aldebaran binaries.

DLLs

doc                                A local copy of this documentation.

                                   | Note that the online documentation is updated more frequently:
                                   | http://aldebaran-robotics.com/documentation/

etc                                XML files: the configuration files you may edit to configure the modules.

                                   ``naoqi/autoload.ini`` file: allows you to choose which modules you want to
                                   load at startup.

include, lib                       Headers and the libraries as part of Aldebaran C++ SDK.

                                   Note that lib/naoqi contains the NAOqi modules.

libs

share                              Data needed for our programs. You should not change anything there.
================================  ==================================================================================



