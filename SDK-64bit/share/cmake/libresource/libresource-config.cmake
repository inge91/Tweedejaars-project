# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(LIBRESOURCE_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(LIBRESOURCE_INCLUDE_DIRS)
   
set(LIBRESOURCE_DEPENDS "ALCOMMON;ALTOOLS;ALSOAP;ALVALUE;TINYXML;RTTOOLS;RT;ALTHREAD;BOOST;BOOST_SIGNALS;BOOST_PROGRAM_OPTIONS;ALLOGREMOTE;ZEROMQ;UUID;PYTHON;ALCORE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ALERROR;ALCOMMON;ALTOOLS;ALSOAP;ALVALUE;TINYXML;RTTOOLS;RT;ALTHREAD;BOOST;BOOST_SIGNALS;BOOST_PROGRAM_OPTIONS;ALLOGREMOTE;ZEROMQ;UUID;PYTHON;ALCORE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ALERROR" CACHE STRING "" FORCE)
mark_as_advanced(LIBRESOURCE_DEPENDS)

set(LIBRESOURCE_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(LIBRESOURCE_DEFINITIONS)
 

find_library(LIBRESOURCE_DEBUG_LIBRARY alresource_d)
find_library(LIBRESOURCE_LIBRARY       alresource)


if (LIBRESOURCE_DEBUG_LIBRARY)
  set(LIBRESOURCE_LIBRARIES optimized;${LIBRESOURCE_LIBRARY};debug;${LIBRESOURCE_DEBUG_LIBRARY})
else()
  set(LIBRESOURCE_LIBRARIES ${LIBRESOURCE_LIBRARY})
endif()
set(LIBRESOURCE_LIBRARIES "${LIBRESOURCE_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(LIBRESOURCE_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBRESOURCE DEFAULT_MSG
  LIBRESOURCE_LIBRARIES
  LIBRESOURCE_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(LIBRESOURCE_PACKAGE_FOUND ${LIBRESOURCE_FOUND} CACHE INTERNAL "" FORCE)
 
message(WARNING ${CMAKE_CURRENT_LIST_FILE}"
  Usage of :
    use_lib(... LIBRESOURCE)
  is deprecated
  Use:
    qi_use_lib(... alresource)
    or
    use_lib(... ALRESOURCE)
   instead
")
