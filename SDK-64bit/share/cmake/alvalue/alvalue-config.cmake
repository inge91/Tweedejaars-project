# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(ALVALUE_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(ALVALUE_INCLUDE_DIRS)
   
set(ALVALUE_DEPENDS "ALERROR;BOOST;ALERROR;BOOST" CACHE STRING "" FORCE)
mark_as_advanced(ALVALUE_DEPENDS)

set(ALVALUE_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(ALVALUE_DEFINITIONS)
 

find_library(ALVALUE_DEBUG_LIBRARY alvalue_d)
find_library(ALVALUE_LIBRARY       alvalue)


if (ALVALUE_DEBUG_LIBRARY)
  set(ALVALUE_LIBRARIES optimized;${ALVALUE_LIBRARY};debug;${ALVALUE_DEBUG_LIBRARY})
else()
  set(ALVALUE_LIBRARIES ${ALVALUE_LIBRARY})
endif()
set(ALVALUE_LIBRARIES "${ALVALUE_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(ALVALUE_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(ALVALUE DEFAULT_MSG
  ALVALUE_LIBRARIES
  ALVALUE_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(ALVALUE_PACKAGE_FOUND ${ALVALUE_FOUND} CACHE INTERNAL "" FORCE)
 