# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(TOOLS_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(TOOLS_INCLUDE_DIRS)
   
set(TOOLS_DEPENDS "QI;ALCORE;ALERROR;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;QI;ALCORE;ALERROR;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL" CACHE STRING "" FORCE)
mark_as_advanced(TOOLS_DEPENDS)

set(TOOLS_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(TOOLS_DEFINITIONS)
 

find_library(TOOLS_DEBUG_LIBRARY altools_d)
find_library(TOOLS_LIBRARY       altools)


if (TOOLS_DEBUG_LIBRARY)
  set(TOOLS_LIBRARIES optimized;${TOOLS_LIBRARY};debug;${TOOLS_DEBUG_LIBRARY})
else()
  set(TOOLS_LIBRARIES ${TOOLS_LIBRARY})
endif()
set(TOOLS_LIBRARIES "${TOOLS_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(TOOLS_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(TOOLS DEFAULT_MSG
  TOOLS_LIBRARIES
  TOOLS_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(TOOLS_PACKAGE_FOUND ${TOOLS_FOUND} CACHE INTERNAL "" FORCE)
 
if(NOT TOOLS_I_KNOW_IT_IS_DEPRECATED AND QI_WARN_DEPRECATED)
  message(STATUS "
    ${CMAKE_CURRENT_SOURCE_DIR}: altools is deprecated
    Please use qi::os, std::stringstream and boost::datetime instead.
  "
  )
  set(TOOLS_I_KNOW_IT_IS_DEPRECATED ON)
endif()

message(WARNING ${CMAKE_CURRENT_LIST_FILE}"
  Usage of :
    use_lib(... TOOLS)
  is deprecated
  Use:
    qi_use_lib(... altools)
    or
    use_lib(... ALTOOLS)
   instead
")
