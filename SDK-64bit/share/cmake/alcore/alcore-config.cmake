# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(ALCORE_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(ALCORE_INCLUDE_DIRS)
   
set(ALCORE_DEPENDS "QI;ALERROR" CACHE STRING "" FORCE)
mark_as_advanced(ALCORE_DEPENDS)

set(ALCORE_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(ALCORE_DEFINITIONS)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(ALCORE DEFAULT_MSG
  ALCORE_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(ALCORE_PACKAGE_FOUND ${ALCORE_FOUND} CACHE INTERNAL "" FORCE)
 
if(NOT ALCORE_I_KNOW_IT_IS_DEPRECATED AND QI_WARN_DEPRECATED)
  message(STATUS "
    ${CMAKE_CURRENT_SOURCE_DIR}: ALCORE is deprecated
    please use libqi.
  "
  )
  set(ALCORE_I_KNOW_IT_IS_DEPRECATED ON)
endif()
