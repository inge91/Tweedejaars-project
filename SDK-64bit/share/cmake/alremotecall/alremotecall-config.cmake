# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(ALREMOTECALL_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(ALREMOTECALL_INCLUDE_DIRS)
   
set(ALREMOTECALL_DEPENDS "ALVALUE;ALSOAP;BOOST;ALERROR;TINYXML;ALVALUE;ALSOAP;BOOST;ALERROR;TINYXML" CACHE STRING "" FORCE)
mark_as_advanced(ALREMOTECALL_DEPENDS)

set(ALREMOTECALL_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(ALREMOTECALL_DEFINITIONS)
 

find_library(ALREMOTECALL_DEBUG_LIBRARY alremotecall_d)
find_library(ALREMOTECALL_LIBRARY       alremotecall)


if (ALREMOTECALL_DEBUG_LIBRARY)
  set(ALREMOTECALL_LIBRARIES optimized;${ALREMOTECALL_LIBRARY};debug;${ALREMOTECALL_DEBUG_LIBRARY})
else()
  set(ALREMOTECALL_LIBRARIES ${ALREMOTECALL_LIBRARY})
endif()
set(ALREMOTECALL_LIBRARIES "${ALREMOTECALL_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(ALREMOTECALL_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(ALREMOTECALL DEFAULT_MSG
  ALREMOTECALL_LIBRARIES
  ALREMOTECALL_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(ALREMOTECALL_PACKAGE_FOUND ${ALREMOTECALL_FOUND} CACHE INTERNAL "" FORCE)
 