# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(ALPROJECT_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(ALPROJECT_INCLUDE_DIRS)
   
set(ALPROJECT_DEPENDS "BOOST;ARCHIVE;ALFILE;ALLOG;ZLIB;ALTOOLS;ALCORE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ALERROR;BOOST_SIGNALS;BOOST;ARCHIVE;ALFILE;ALLOG;ZLIB;ALTOOLS;ALCORE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ALERROR;BOOST_SIGNALS" CACHE STRING "" FORCE)
mark_as_advanced(ALPROJECT_DEPENDS)

set(ALPROJECT_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(ALPROJECT_DEFINITIONS)
 

find_library(ALPROJECT_DEBUG_LIBRARY alproject_d)
find_library(ALPROJECT_LIBRARY       alproject)


if (ALPROJECT_DEBUG_LIBRARY)
  set(ALPROJECT_LIBRARIES optimized;${ALPROJECT_LIBRARY};debug;${ALPROJECT_DEBUG_LIBRARY})
else()
  set(ALPROJECT_LIBRARIES ${ALPROJECT_LIBRARY})
endif()
set(ALPROJECT_LIBRARIES "${ALPROJECT_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(ALPROJECT_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(ALPROJECT DEFAULT_MSG
  ALPROJECT_LIBRARIES
  ALPROJECT_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(ALPROJECT_PACKAGE_FOUND ${ALPROJECT_FOUND} CACHE INTERNAL "" FORCE)
 