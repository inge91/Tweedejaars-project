# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(LIBAUDIO_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(LIBAUDIO_INCLUDE_DIRS)
   
set(LIBAUDIO_DEPENDS "ALCOMMON;ALEXTRACTOR;ALMATH;ALMATHINTERNAL;ALSOAP;ALVALUE;TINYXML;RTTOOLS;RT;ALTHREAD;ALERROR;BOOST;BOOST_SIGNALS;BOOST_PROGRAM_OPTIONS;ALLOGREMOTE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ZEROMQ;UUID;PYTHON;ALCOMMON;ALEXTRACTOR;ALMATH;ALMATHINTERNAL;ALSOAP;ALVALUE;TINYXML;RTTOOLS;RT;ALTHREAD;ALERROR;BOOST;BOOST_SIGNALS;BOOST_PROGRAM_OPTIONS;ALLOGREMOTE;QI;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;ZEROMQ;UUID;PYTHON" CACHE STRING "" FORCE)
mark_as_advanced(LIBAUDIO_DEPENDS)

set(LIBAUDIO_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(LIBAUDIO_DEFINITIONS)
 

find_library(LIBAUDIO_DEBUG_LIBRARY alaudio_d)
find_library(LIBAUDIO_LIBRARY       alaudio)


if (LIBAUDIO_DEBUG_LIBRARY)
  set(LIBAUDIO_LIBRARIES optimized;${LIBAUDIO_LIBRARY};debug;${LIBAUDIO_DEBUG_LIBRARY})
else()
  set(LIBAUDIO_LIBRARIES ${LIBAUDIO_LIBRARY})
endif()
set(LIBAUDIO_LIBRARIES "${LIBAUDIO_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(LIBAUDIO_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBAUDIO DEFAULT_MSG
  LIBAUDIO_LIBRARIES
  LIBAUDIO_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(LIBAUDIO_PACKAGE_FOUND ${LIBAUDIO_FOUND} CACHE INTERNAL "" FORCE)
 
message(WARNING ${CMAKE_CURRENT_LIST_FILE}"
  Usage of :
    use_lib(... LIBAUDIO)
  is deprecated
  Use:
    qi_use_lib(... alaudio)
    or
    use_lib(... ALAUDIO)
   instead
")
