# This is an autogenerated file. Do not edit

get_filename_component(_cur_dir ${CMAKE_CURRENT_LIST_FILE} PATH)
set(_root_dir "${_cur_dir}/../../../")
get_filename_component(ROOT_DIR ${_root_dir} ABSOLUTE)

 
set(QI_INCLUDE_DIRS "${ROOT_DIR}/include;" CACHE STRING "" FORCE)
mark_as_advanced(QI_INCLUDE_DIRS)
   
set(QI_DEPENDS "BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL;BOOST_FILESYSTEM;BOOST_THREAD;BOOST_DATE_TIME;PTHREAD;DL" CACHE STRING "" FORCE)
mark_as_advanced(QI_DEPENDS)

set(QI_DEFINITIONS "" CACHE STRING "" FORCE)
mark_as_advanced(QI_DEFINITIONS)
 

find_library(QI_DEBUG_LIBRARY qi_d)
find_library(QI_LIBRARY       qi)


if (QI_DEBUG_LIBRARY)
  set(QI_LIBRARIES optimized;${QI_LIBRARY};debug;${QI_DEBUG_LIBRARY})
else()
  set(QI_LIBRARIES ${QI_LIBRARY})
endif()
set(QI_LIBRARIES "${QI_LIBRARIES}" CACHE STRING "" FORCE)
mark_as_advanced(QI_LIBRARIES)
 
include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(QI DEFAULT_MSG
  QI_LIBRARIES
  QI_INCLUDE_DIRS
)
# Right after find_package_handle_standard_args, _FOUND is
# set correctly.
# For instance, if foo/bar.h is not foud, FOO_FOUND is FALSE.
# But, right after this, since foo-config.cmake HAS been found, CMake
# re-set FOO_FOUND to TRUE.
# So we set _PACKAGE_FOUND in cache...
set(QI_PACKAGE_FOUND ${QI_FOUND} CACHE INTERNAL "" FORCE)
 