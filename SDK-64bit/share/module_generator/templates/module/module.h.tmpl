/**
 * @author Author_Name
 *
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#ifndef PROJECT_NAME_MODULE_NAME_H
#define PROJECT_NAME_MODULE_NAME_H

#include <boost/shared_ptr.hpp>
#include <alcommon/almodule.h>
#include <string>

namespace AL
{
  class ALBroker;
}

class Module_Name : public AL::ALModule
{
  public:

     Module_Name(boost::shared_ptr<AL::ALBroker> broker, const std::string& name);

    virtual ~Module_Name();

    /**
     * echo: simply returns the paramter given as first arguemtn
     * The AL::ALValue is an union type which can be a std::string, an int, a float,
     * a vector of floats, and so on.
     */
    AL::ALValue echo(const AL::ALValue& foo);
};

#endif  // PROJECT_NAME_MODULE_NAME_H

